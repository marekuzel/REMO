<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.
int world[6][6] = {{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0}};
int move = 0;
clock big = 0;
chan R, L;

void insert_rcar(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 2;
        world[y][x+length-1] = 2;
    }
    else{
        world[y][x] = 2;
        world[y+length-1][x] = 2;
    }
}
void insert_car(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 1;
        world[y][x+length-1] = 1;
    }
    else{
        world[y][x] = 1;
        world[y+length-1][x] = 1;
    }
}

void delete_car(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 0;
        world[y][x+length-1] = 0;
    }
    else{
        world[y][x] = 0;
        world[y+length-1][x] = 0;
    }
}
void insert_truck(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 1;
        world[y][x+length-2] = 1;
        world[y][x+length-1] = 1;
    }
    else{
        world[y][x] = 1;
        world[y+length-2][x] = 1;
        world[y+length-1][x] = 1;
    }
}
void delete_truck(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 0;
        world[y][x+length-2] = 0;
        world[y][x+length-1] = 0;
    }
    else{
        world[y][x] = 0;
        world[y+length-2][x] = 0;
        world[y+length-1][x] = 0;
    }
}

bool back_check_x(int y, int x){
    if (world[y][x-1] == 0){
        return true;
    }
    return false;
}

bool back_check_y(int y, int x){
    if (world[y-1][x] == 0){
        return true;
    }
    return false;
}

bool fwd_check_x(int y, int x){
    if (world[y][x+2] == 0){
        return true;
    }
    return false;
}

bool fwd_check_y(int y, int x){
    if (world[y+2][x] == 0){
        return true;
    }
    return false;
}</declaration>
	<template>
		<name x="5" y="5">red_car</name>
		<parameter>const int[0,1] facing, int[0,5] y, int[0,5] x</parameter>
		<declaration>// Place local declarations here.

//if facing = 0 that means our vehicle is oriented in x coordinates
</declaration>
		<location id="id0" x="0" y="-8">
			<committed/>
		</location>
		<location id="id1" x="0" y="-204">
		</location>
		<location id="id2" x="0" y="-374" color="#ff0000">
			<name x="-10" y="-408">win</name>
			<committed/>
		</location>
		<init ref="id0"/>
		<transition id="id3">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="246" y="-374">(x &lt; 4)&amp;&amp;(fwd_check_x(y,x))</label>
			<label kind="synchronisation" x="170" y="-255">R?</label>
			<label kind="assignment" x="255" y="-331">delete_car(2,facing,y,x),
x++,
insert_rcar(2,facing,y,x)</label>
			<nail x="229" y="-306"/>
			<nail x="229" y="-204"/>
		</transition>
		<transition id="id4">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-476" y="-280">(x &gt;= 1)&amp;&amp;(back_check_x(y,x))</label>
			<label kind="synchronisation" x="-211" y="-280">R?</label>
			<label kind="assignment" x="-450" y="-255">delete_car(2,facing,y,x),
x--,
insert_rcar(2,facing, y,x)</label>
			<nail x="-229" y="-323"/>
			<nail x="-229" y="-204"/>
		</transition>
		<transition id="id5">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="8" y="-323">(y == 2)&amp;&amp;(x == 4)</label>
		</transition>
		<transition id="id6">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="assignment" x="-238" y="-68">insert_rcar(2, facing, y, x)</label>
			<nail x="0" y="-8"/>
			<nail x="0" y="-187"/>
		</transition>
		<transition id="id7">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-476" y="-169">(x &gt;= 1)&amp;&amp;(back_check_x(y,x))</label>
			<label kind="synchronisation" x="-211" y="-169">L?</label>
			<label kind="assignment" x="-450" y="-144">delete_car(2,facing,y,x),
x--,
insert_rcar(2,facing, y,x)</label>
			<nail x="-229" y="-204"/>
			<nail x="-229" y="-93"/>
		</transition>
		<transition id="id8">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="238" y="-161">(x &lt; 4)&amp;&amp;(fwd_check_x(y,x))</label>
			<label kind="synchronisation" x="170" y="-153">L?</label>
			<label kind="assignment" x="238" y="-136">delete_car(2,facing,y,x),
x++,
insert_rcar(2,facing,y,x)</label>
			<nail x="229" y="-204"/>
			<nail x="229" y="-102"/>
			<nail x="17" y="-195"/>
		</transition>
	</template>
	<template>
		<name>car</name>
		<parameter>const int[0,1] facing, int[0,5] y, int[0,5] x</parameter>
		<location id="id9" x="-42" y="493">
			<committed/>
		</location>
		<location id="id10" x="-42" y="349">
		</location>
		<location id="id11" x="-306" y="93">
		</location>
		<location id="id12" x="374" y="68">
		</location>
		<init ref="id9"/>
		<transition id="id13">
			<source ref="id12"/>
			<target ref="id12"/>
			<label kind="guard" x="476" y="187">(y&lt;4)&amp;&amp;(fwd_check_y(y,x))</label>
			<label kind="synchronisation" x="382" y="178">L?</label>
			<label kind="assignment" x="484" y="221">delete_car(2,facing,y,x),
y++,
insert_car(2,facing,y,x)</label>
			<nail x="374" y="204"/>
			<nail x="467" y="204"/>
		</transition>
		<transition id="id14">
			<source ref="id12"/>
			<target ref="id12"/>
			<label kind="guard" x="476" y="-76">(y&gt;=1)&amp;&amp;(back_check_y(y,x))</label>
			<label kind="synchronisation" x="399" y="-42">L?</label>
			<label kind="assignment" x="501" y="-42">delete_car(2,facing,y,x),
y--,
insert_car(2,facing,y,x)</label>
			<nail x="374" y="-59"/>
			<nail x="467" y="-59"/>
		</transition>
		<transition id="id15">
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="guard" x="-221" y="-103">(x&lt;4)&amp;&amp;(fwd_check_x(y,x))</label>
			<label kind="synchronisation" x="-204" y="34">R?</label>
			<label kind="assignment" x="-221" y="-77">delete_car(2,facing,y,x),
x++,
insert_car(2,facing,y,x)</label>
			<nail x="-127" y="-18"/>
			<nail x="-127" y="93"/>
		</transition>
		<transition id="id16">
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="guard" x="-510" y="-103">(x&gt;=1)&amp;&amp;(back_check_x(y,x))</label>
			<label kind="synchronisation" x="-475" y="25">R?</label>
			<label kind="assignment" x="-561" y="-77">delete_car(2,facing,y,x),
x--,
insert_car(2,facing, y,x)</label>
			<nail x="-493" y="-9"/>
			<nail x="-493" y="93"/>
		</transition>
		<transition id="id17">
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="guard" x="0" y="331">facing == 1</label>
		</transition>
		<transition id="id18">
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="guard" x="-170" y="331">facing == 0</label>
		</transition>
		<transition id="id19">
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="assignment" x="-255" y="425">insert_car(2, facing, y, x)</label>
		</transition>
		<transition id="id20">
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="guard" x="-612" y="161">(x&gt;=1)&amp;&amp;(back_check_x(y,x))</label>
			<label kind="synchronisation" x="-475" y="127">L?</label>
			<label kind="assignment" x="-603" y="187">delete_car(2,facing,y,x),
x--,
insert_car(2,facing, y,x)</label>
			<nail x="-493" y="93"/>
			<nail x="-493" y="195"/>
		</transition>
		<transition id="id21">
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="guard" x="-102" y="85">(x&lt;4)&amp;&amp;(fwd_check_x(y,x))</label>
			<label kind="synchronisation" x="-195" y="110">L?</label>
			<label kind="assignment" x="-110" y="110">delete_car(2,facing,y,x),
x++,
insert_car(2,facing,y,x)</label>
			<nail x="-127" y="93"/>
			<nail x="-127" y="195"/>
		</transition>
		<transition id="id22">
			<source ref="id12"/>
			<target ref="id12"/>
			<label kind="guard" x="153" y="-110">(y&gt;=1)&amp;&amp;(back_check_y(y,x))</label>
			<label kind="synchronisation" x="323" y="-42">R?</label>
			<label kind="assignment" x="102" y="-68">delete_car(2,facing,y,x),
y--,
insert_car(2,facing,y,x)</label>
			<nail x="280" y="-59"/>
			<nail x="373" y="-59"/>
		</transition>
		<transition id="id23">
			<source ref="id12"/>
			<target ref="id12"/>
			<label kind="guard" x="153" y="212">(y&lt;4)&amp;&amp;(fwd_check_y(y,x))</label>
			<label kind="synchronisation" x="314" y="178">R?</label>
			<label kind="assignment" x="136" y="238">delete_car(2,facing,y,x),
y++,
insert_car(2,facing,y,x)</label>
			<nail x="365" y="76"/>
			<nail x="289" y="204"/>
			<nail x="374" y="204"/>
		</transition>
	</template>
	<template>
		<name>truck</name>
		<parameter>const int[0,1] facing, int[0,5] y, int[0,5] x</parameter>
		<location id="id24" x="8" y="221">
			<committed/>
		</location>
		<location id="id25" x="8" y="34">
		</location>
		<location id="id26" x="-178" y="-161">
		</location>
		<location id="id27" x="331" y="-153">
		</location>
		<init ref="id24"/>
		<transition id="id28">
			<source ref="id25"/>
			<target ref="id27"/>
			<label kind="guard" x="42" y="25">facing == 1</label>
		</transition>
		<transition id="id29">
			<source ref="id25"/>
			<target ref="id26"/>
			<label kind="guard" x="-110" y="17">facing == 0</label>
		</transition>
		<transition id="id30">
			<source ref="id24"/>
			<target ref="id25"/>
			<label kind="assignment" x="-221" y="153">insert_truck(3, facing, y, x)</label>
		</transition>
		<transition id="id31">
			<source ref="id26"/>
			<target ref="id26"/>
			<label kind="guard" x="-119" y="-331">(x&lt;3)&amp;&amp;(fwd_check_x(y,x+1))</label>
			<label kind="synchronisation" x="-25" y="-229">R?</label>
			<label kind="assignment" x="-119" y="-305">delete_truck(3,facing,y,x),
x++,
insert_truck(3,facing,y,x)</label>
			<nail x="8" y="-246"/>
			<nail x="8" y="-152"/>
		</transition>
		<transition id="id32">
			<source ref="id26"/>
			<target ref="id26"/>
			<label kind="guard" x="-442" y="-348">(x&gt;=1)&amp;&amp;(back_check_x(y,x))</label>
			<label kind="synchronisation" x="-355" y="-220">R?</label>
			<label kind="assignment" x="-441" y="-323">delete_truck(3,facing,y,x),
x--,
insert_truck(3,facing, y,x)</label>
			<nail x="-373" y="-246"/>
			<nail x="-374" y="-161"/>
		</transition>
		<transition id="id33">
			<source ref="id27"/>
			<target ref="id27"/>
			<label kind="guard" x="331" y="-8">(y&lt;3)&amp;&amp;(fwd_check_y(y+1,x))</label>
			<label kind="synchronisation" x="365" y="-42">R?</label>
			<label kind="assignment" x="331" y="17">delete_truck(3,facing,y,x),
y++,
insert_truck(3,facing,y,x)</label>
			<nail x="331" y="-17"/>
			<nail x="424" y="-17"/>
		</transition>
		<transition id="id34">
			<source ref="id27"/>
			<target ref="id27"/>
			<label kind="guard" x="348" y="-382">(y&gt;=1)&amp;&amp;(back_check_y(y,x))</label>
			<label kind="synchronisation" x="348" y="-272">R?</label>
			<label kind="assignment" x="357" y="-365">delete_truck(3,facing,y,x),
y--,
insert_truck(3,facing,y,x)</label>
			<nail x="331" y="-289"/>
			<nail x="433" y="-289"/>
		</transition>
		<transition id="id35">
			<source ref="id26"/>
			<target ref="id26"/>
			<label kind="guard" x="-442" y="-68">(x&gt;=1)&amp;&amp;(back_check_x(y,x))</label>
			<label kind="synchronisation" x="-357" y="-127">L?</label>
			<label kind="assignment" x="-442" y="-51">delete_truck(3,facing,y,x),
x--,
insert_truck(3,facing, y,x)</label>
			<nail x="-374" y="-161"/>
			<nail x="-374" y="-76"/>
		</transition>
		<transition id="id36">
			<source ref="id26"/>
			<target ref="id26"/>
			<label kind="guard" x="-51" y="-127">(x&lt;3)&amp;&amp;(fwd_check_x(y,x+1))</label>
			<label kind="synchronisation" x="-51" y="-144">L?</label>
			<label kind="assignment" x="-59" y="-110">delete_truck(3,facing,y,x),
x++,
insert_truck(3,facing,y,x)</label>
			<nail x="8" y="-153"/>
			<nail x="8" y="-76"/>
		</transition>
		<transition id="id37">
			<source ref="id27"/>
			<target ref="id27"/>
			<label kind="guard" x="110" y="-382">(y&gt;=1)&amp;&amp;(back_check_y(y,x))</label>
			<label kind="synchronisation" x="280" y="-272">L?</label>
			<label kind="assignment" x="119" y="-365">delete_truck(3,facing,y,x),
y--,
insert_truck(3,facing,y,x)</label>
			<nail x="229" y="-289"/>
			<nail x="331" y="-289"/>
			<nail x="331" y="-170"/>
		</transition>
		<transition id="id38">
			<source ref="id27"/>
			<target ref="id27"/>
			<label kind="guard" x="93" y="-8">(y&lt;3)&amp;&amp;(fwd_check_y(y+1,x))</label>
			<label kind="synchronisation" x="297" y="-51">L?</label>
			<label kind="assignment" x="85" y="59">delete_truck(3,facing,y,x),
y++,
insert_truck(3,facing,y,x)</label>
			<nail x="246" y="-17"/>
			<nail x="331" y="-17"/>
		</transition>
	</template>
	<template>
		<name>righty</name>
		<declaration>clock x = 0;</declaration>
		<location id="id39" x="0" y="0">
			<label kind="invariant" x="-10" y="17">x &lt;= 5</label>
		</location>
		<init ref="id39"/>
		<transition id="id40">
			<source ref="id39"/>
			<target ref="id39"/>
			<label kind="guard" x="85" y="-153">x == 5</label>
			<label kind="synchronisation" x="85" y="-127">R!</label>
			<label kind="assignment" x="85" y="-102">x = 0</label>
			<nail x="0" y="-119"/>
			<nail x="110" y="0"/>
		</transition>
	</template>
	<template>
		<name>lefty</name>
		<declaration>clock x = 0;</declaration>
		<location id="id41" x="0" y="0">
			<label kind="invariant" x="-10" y="17">x &lt;= 3</label>
		</location>
		<init ref="id41"/>
		<transition id="id42">
			<source ref="id41"/>
			<target ref="id41"/>
			<label kind="guard" x="85" y="-110">x == 3</label>
			<label kind="synchronisation" x="85" y="-84">L!</label>
			<label kind="assignment" x="85" y="-59">x = 0</label>
			<nail x="0" y="-102"/>
			<nail x="85" y="0"/>
		</transition>
	</template>
	<system>//car decl- facing, y,x
P_1 = red_car(0,2,2);


T_13 = truck(0,0,0);
T_5 = truck(1,0,4);
T_6 = truck(1,0,5);
C_4 = car(1,0,3);
C_1 = car(1,1,0);
C_14 = car(0,1,1);
C_16 = car(0,3,0);
C_3 = car(1,3,2);
C_2 = car(1,4,1);
C_17 = car(0,4,4);
C_18 = car(0,5,2);
C_24 = car(0,5,4);
rHand = righty();
lHand = lefty();


// List one or more processes to be composed into a system.
system P_1, C_1, C_4, C_14, C_16, C_3, C_2, C_17, C_18, C_24, T_13, T_5, T_6, rHand, lHand;
</system>
	<queries>
		<query>
			<formula>E&lt;&gt;P_1.win</formula>
			<comment/>
			<option key="--diagnostic" value="2"/>
			<result outcome="success" type="quality" timestamp="2024-05-14 12:18:11 +0000">
				<option key="--diagnostic" value="2"/>
			</result>
		</query>
	</queries>
</nta>
