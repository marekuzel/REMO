<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.
int world[6][6] = {{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0}};
clock move = 0;
clock action = 0;

void insert_rcar(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 2;
        world[y][x+length-1] = 2;
    }
    else{
        world[y][x] = 2;
        world[y+length-1][x] = 2;
    }
}
void insert_car(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 1;
        world[y][x+length-1] = 1;
    }
    else{
        world[y][x] = 1;
        world[y+length-1][x] = 1;
    }
}

void delete_car(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 0;
        world[y][x+length-1] = 0;
    }
    else{
        world[y][x] = 0;
        world[y+length-1][x] = 0;
    }
}
void insert_truck(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 1;
        world[y][x+length-2] = 1;
        world[y][x+length-1] = 1;
    }
    else{
        world[y][x] = 1;
        world[y+length-2][x] = 1;
        world[y+length-1][x] = 1;
    }
}
void delete_truck(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 0;
        world[y][x+length-2] = 0;
        world[y][x+length-1] = 0;
    }
    else{
        world[y][x] = 0;
        world[y+length-2][x] = 0;
        world[y+length-1][x] = 0;
    }
}

bool back_check_x(int y, int x, int i){
    bool check = true;
    for (index:int[1,5]){
        if (world[y][x-index] != 0){
            check = false;
        }
        if (index == i){
            return check;
        }
    }
    return true;
}

bool back_check_y(int y, int x, int i){
    bool check = true;
    for (index:int[1,5]){
        if (world[y-index][x] != 0){
            check = false;
        }
        if (index == i){
            return check;
        }
    }
    return true;
}

bool fwd_check_x(int y, int x, int i){
    bool check = true;
    for (index:int[1,5]){
        if (world[y][x+index+1] != 0){
            check = false;
        }
        if (index == i){
            return check;
        }
    }
    return true;
}

bool fwd_check_y(int y, int x, int i){
    bool check = true; 
    for (index:int[1,5]){
        if (world[y+index+1][x] != 0){
            check = false;
        }
        if (index == i){
            return check;
        }
    }
    return true;
}

</declaration>
	<template>
		<name x="5" y="5">red_car</name>
		<parameter>const int[0,1] facing, int[0,5] y, int[0,5] x</parameter>
		<declaration>// Place local declarations here.

//if facing = 0 that means our vehicle is oriented in x coordinates
int car_time = 1;</declaration>
		<location id="id0" x="0" y="-8">
			<committed/>
		</location>
		<location id="id1" x="0" y="-314">
		</location>
		<location id="id2" x="0" y="-374" color="#ff0000">
			<name x="-10" y="-408">win</name>
			<committed/>
		</location>
		<location id="id3" x="-119" y="-102">
			<label kind="invariant" x="-178" y="-85">action&lt;=car_time</label>
			<committed/>
		</location>
		<init ref="id0"/>
		<transition id="id4">
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="guard" x="-195" y="-229">action==car_time</label>
			<label kind="assignment" x="-170" y="-204">action=0</label>
		</transition>
		<transition id="id5">
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="select" x="433" y="-306">i:int[1,4]</label>
			<label kind="guard" x="357" y="-280">(x &lt;= (4-i))&amp;&amp;(fwd_check_x(y,x,i))</label>
			<label kind="assignment" x="382" y="-255">delete_car(2,facing,y,x),
x+=i,
insert_rcar(2, facing, y, x)</label>
			<nail x="348" y="-314"/>
			<nail x="348" y="-102"/>
		</transition>
		<transition id="id6">
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="select" x="-484" y="-280">i:int[1,5]</label>
			<label kind="guard" x="-569" y="-255">(x &gt;= i)&amp;&amp;(back_check_x(y,x,i))</label>
			<label kind="assignment" x="-544" y="-229">delete_car(2,facing,y,x),
x-=i,
insert_rcar(2, facing, y, x)</label>
			<nail x="-314" y="-314"/>
			<nail x="-314" y="-102"/>
		</transition>
		<transition id="id7">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="8" y="-357">(y == 2)&amp;&amp;(x == 4)</label>
		</transition>
		<transition id="id8">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="assignment" x="-229" y="-59">insert_rcar(2, facing, y, x)</label>
			<nail x="0" y="-8"/>
			<nail x="0" y="-187"/>
		</transition>
	</template>
	<template>
		<name>car</name>
		<parameter>const int[0,1] facing, int[0,5] y, int[0,5] x</parameter>
		<declaration>int car_time = 1;</declaration>
		<location id="id9" x="-42" y="493">
			<committed/>
		</location>
		<location id="id10" x="-42" y="349">
			<committed/>
		</location>
		<location id="id11" x="-323" y="204">
		</location>
		<location id="id12" x="195" y="221">
		</location>
		<location id="id13" x="-321" y="110">
			<label kind="invariant" x="-382" y="76">action&lt;=car_time</label>
			<committed/>
		</location>
		<location id="id14" x="382" y="221">
			<label kind="invariant" x="407" y="212">action&lt;=car_time</label>
			<committed/>
		</location>
		<init ref="id9"/>
		<transition id="id15">
			<source ref="id14"/>
			<target ref="id12"/>
			<label kind="guard" x="229" y="195">action==car_time</label>
			<label kind="assignment" x="263" y="221">action=0</label>
		</transition>
		<transition id="id16">
			<source ref="id13"/>
			<target ref="id11"/>
			<label kind="guard" x="-382" y="136">action==car_time</label>
			<label kind="assignment" x="-357" y="153">action=0</label>
		</transition>
		<transition id="id17">
			<source ref="id12"/>
			<target ref="id14"/>
			<label kind="select" x="263" y="365">i:int[1,4]</label>
			<label kind="guard" x="186" y="391">(y+i&lt;=4)&amp;&amp;(fwd_check_y(y,x,i))</label>
			<label kind="assignment" x="220" y="425">delete_car(2,facing,y,x),
y+=i,
insert_car(2,facing,y,x)</label>
			<nail x="195" y="357"/>
			<nail x="382" y="357"/>
		</transition>
		<transition id="id18">
			<source ref="id12"/>
			<target ref="id14"/>
			<label kind="select" x="254" y="-25">i:int[1,4]</label>
			<label kind="guard" x="195" y="0">(y&gt;=i)&amp;&amp;(back_check_y(y,x,i))</label>
			<label kind="assignment" x="203" y="25">delete_car(2,facing,y,x),
y-=i,
insert_car(2,facing,y,x)</label>
			<nail x="195" y="85"/>
			<nail x="382" y="85"/>
		</transition>
		<transition id="id19">
			<source ref="id11"/>
			<target ref="id13"/>
			<label kind="select" x="-68" y="76">i:int[1,4]</label>
			<label kind="guard" x="-119" y="102">(x+i&lt;=4)&amp;&amp;(fwd_check_x(y,x,i))</label>
			<label kind="assignment" x="-93" y="127">delete_car(2,facing,y,x),
x+=i,
insert_car(2,facing,y,x)</label>
			<nail x="-127" y="204"/>
			<nail x="-127" y="110"/>
		</transition>
		<transition id="id20">
			<source ref="id11"/>
			<target ref="id13"/>
			<label kind="select" x="-654" y="119">i:int[1,4]</label>
			<label kind="guard" x="-739" y="144">(x&gt;=i)&amp;&amp;(back_check_x(y,x,i))</label>
			<label kind="assignment" x="-705" y="170">delete_car(2,facing,y,x),
x-=i,
insert_car(2,facing, y,x)</label>
			<nail x="-501" y="204"/>
			<nail x="-501" y="110"/>
		</transition>
		<transition id="id21">
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="guard" x="25" y="238">facing == 1</label>
		</transition>
		<transition id="id22">
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="guard" x="-221" y="229">facing == 0</label>
		</transition>
		<transition id="id23">
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="assignment" x="-255" y="425">insert_car(2, facing, y, x)</label>
		</transition>
	</template>
	<template>
		<name>truck</name>
		<parameter>const int[0,1] facing, int[0,5] y, int[0,5] x</parameter>
		<declaration>int truck_time = 1;
</declaration>
		<location id="id24" x="8" y="221">
			<committed/>
		</location>
		<location id="id25" x="8" y="34">
			<committed/>
		</location>
		<location id="id26" x="-204" y="-68">
		</location>
		<location id="id27" x="442" y="34">
		</location>
		<location id="id28" x="-204" y="-221">
			<label kind="invariant" x="-263" y="-255">action&lt;=truck_time</label>
			<committed/>
		</location>
		<location id="id29" x="629" y="34">
			<label kind="invariant" x="646" y="25">action&lt;=truck_time</label>
			<committed/>
		</location>
		<init ref="id24"/>
		<transition id="id30">
			<source ref="id29"/>
			<target ref="id27"/>
			<label kind="guard" x="467" y="8">action==truck_time</label>
			<label kind="assignment" x="510" y="42">action=0</label>
		</transition>
		<transition id="id31">
			<source ref="id28"/>
			<target ref="id26"/>
			<label kind="guard" x="-195" y="-178">action==truck_time</label>
			<label kind="assignment" x="-153" y="-153">action=0</label>
		</transition>
		<transition id="id32">
			<source ref="id25"/>
			<target ref="id27"/>
			<label kind="guard" x="93" y="8">facing == 1</label>
		</transition>
		<transition id="id33">
			<source ref="id25"/>
			<target ref="id26"/>
			<label kind="guard" x="-153" y="0">facing == 0</label>
		</transition>
		<transition id="id34">
			<source ref="id24"/>
			<target ref="id25"/>
			<label kind="assignment" x="-229" y="119">insert_truck(3, facing, y, x)</label>
		</transition>
		<transition id="id35">
			<source ref="id26"/>
			<target ref="id28"/>
			<label kind="select" x="76" y="-246">i:int[1,3]</label>
			<label kind="guard" x="-8" y="-221">(x+i&lt;=3)&amp;&amp;(fwd_check_x(y,x+1,i))</label>
			<label kind="assignment" x="17" y="-204">delete_truck(3,facing,y,x),
x+=i,
insert_truck(3,facing,y,x)</label>
			<nail x="-17" y="-68"/>
			<nail x="-17" y="-221"/>
		</transition>
		<transition id="id36">
			<source ref="id26"/>
			<target ref="id28"/>
			<label kind="select" x="-569" y="-212">i:int[1,3]</label>
			<label kind="guard" x="-646" y="-195">(x&gt;=i)&amp;&amp;(back_check_x(y,x,i))</label>
			<label kind="assignment" x="-637" y="-170">delete_truck(3,facing,y,x),
x-=i,
insert_truck(3,facing, y,x)</label>
			<nail x="-399" y="-68"/>
			<nail x="-399" y="-221"/>
		</transition>
		<transition id="id37">
			<source ref="id27"/>
			<target ref="id29"/>
			<label kind="select" x="510" y="178">i:int[1,3]</label>
			<label kind="guard" x="425" y="195">(y+i&lt;=3)&amp;&amp;(fwd_check_y(y+1,x,i))</label>
			<label kind="assignment" x="450" y="221">delete_truck(3,facing,y,x),
y+=i,
insert_truck(3,facing,y,x)</label>
			<nail x="442" y="170"/>
			<nail x="629" y="170"/>
		</transition>
		<transition id="id38">
			<source ref="id27"/>
			<target ref="id29"/>
			<label kind="select" x="518" y="-204">i:int[1,3]</label>
			<label kind="guard" x="458" y="-178">(y&gt;=i)&amp;&amp;(back_check_y(y,x,i))</label>
			<label kind="assignment" x="458" y="-162">delete_truck(3,facing,y,x),
y-=i,
insert_truck(3,facing,y,x)</label>
			<nail x="442" y="-93"/>
			<nail x="629" y="-93"/>
		</transition>
	</template>
	<system>P_1 = red_car(0,2,1);

C_0 = car(0,0,0);
C_1 = car(1,0,2);
T_0 = truck(1,0,3);
T_1 = truck(1,1,0);
T_2 = truck(0,3,1);
T_3 = truck(0,5,3);

// List one or more processes to be composed into a system.
system P_1, C_0,C_1,T_0,T_1, T_2, T_3;
</system>
	<queries>
		<query>
			<formula>E&lt;&gt;P_1.win</formula>
			<comment/>
			<option key="--diagnostic" value="2"/>
			<result outcome="success" type="quality" timestamp="2024-05-16 16:10:49 +0200">
				<option key="--diagnostic" value="2"/>
			</result>
		</query>
	</queries>
</nta>
