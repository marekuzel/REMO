<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.
int world[6][6] = {{0,0,0,4,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0},{0,0,0,0,0,0}};
clock move = 0;
clock action = 0;
clock truckAction = 0;

void insert_rcar(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 2;
        world[y][x+length-1] = 2;
    }
    else{
        world[y][x] = 2;
        world[y+length-1][x] = 2;
    }
}
void insert_car(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 1;
        world[y][x+length-1] = 1;
    }
    else{
        world[y][x] = 1;
        world[y+length-1][x] = 1;
    }
}

void delete_car(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 0;
        world[y][x+length-1] = 0;
    }
    else{
        world[y][x] = 0;
        world[y+length-1][x] = 0;
    }
}
void insert_truck(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 1;
        world[y][x+length-2] = 1;
        world[y][x+length-1] = 1;
    }
    else{
        world[y][x] = 1;
        world[y+length-2][x] = 1;
        world[y+length-1][x] = 1;
    }
}
void delete_truck(int length,int facing, int y, int x){
    if (facing == 0){
        world[y][x] = 0;
        world[y][x+length-2] = 0;
        world[y][x+length-1] = 0;
    }
    else{
        world[y][x] = 0;
        world[y+length-2][x] = 0;
        world[y+length-1][x] = 0;
    }
}

bool back_check_x(int y, int x){
    if (world[y][x-1] == 0){
        return true;
    }
    return false;
}

bool back_check_y(int y, int x){
    if (world[y-1][x] == 0){
        return true;
    }
    return false;
}

bool fwd_check_x(int y, int x){
    if (world[y][x+2] == 0){
        return true;
    }
    return false;
}

bool fwd_check_y(int y, int x){
    if (world[y+2][x] == 0){
        return true;
    }
    return false;
}</declaration>
	<template>
		<name x="5" y="5">red_car</name>
		<parameter>const int[0,1] facing, int[0,5] y, int[0,5] x</parameter>
		<declaration>// Place local declarations here.

//if facing = 0 that means our vehicle is oriented in x coordinates
int car_time = 1;</declaration>
		<location id="id0" x="0" y="-8">
			<committed/>
		</location>
		<location id="id1" x="0" y="-204">
		</location>
		<location id="id2" x="0" y="-374" color="#ff0000">
			<name x="-10" y="-408">win</name>
			<committed/>
		</location>
		<init ref="id0"/>
		<transition id="id3">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="238" y="-263">(x &lt; 4)&amp;&amp;(fwd_check_x(y,x))&amp;&amp;(action&gt;=car_time)</label>
			<label kind="assignment" x="238" y="-212">delete_car(2,facing,y,x),
x++,
insert_rcar(2,facing,y,x),

action=0</label>
			<nail x="229" y="-306"/>
			<nail x="229" y="-110"/>
		</transition>
		<transition id="id4">
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-476" y="-280">(x &gt;= 1)&amp;&amp;(back_check_x(y,x))&amp;&amp;action&gt;=car_time</label>
			<label kind="assignment" x="-450" y="-255">delete_car(2,facing,y,x),
x--,
insert_rcar(2,facing, y,x),

action=0</label>
			<nail x="-229" y="-323"/>
			<nail x="-229" y="-102"/>
		</transition>
		<transition id="id5">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="8" y="-323">(y == 2)&amp;&amp;(x == 4)</label>
		</transition>
		<transition id="id6">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="assignment" x="-238" y="-68">insert_rcar(2, facing, y, x)</label>
			<nail x="0" y="-8"/>
			<nail x="0" y="-187"/>
		</transition>
	</template>
	<template>
		<name>car</name>
		<parameter>const int[0,1] facing, int[0,5] y, int[0,5] x</parameter>
		<declaration>int car_time = 1;</declaration>
		<location id="id7" x="-42" y="493">
			<committed/>
		</location>
		<location id="id8" x="-42" y="349">
			<committed/>
		</location>
		<location id="id9" x="-323" y="204">
		</location>
		<location id="id10" x="230" y="204">
		</location>
		<init ref="id7"/>
		<transition id="id11">
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="guard" x="144" y="348">(y&lt;4)&amp;&amp;(fwd_check_y(y,x))&amp;&amp;(action&gt;=car_time)</label>
			<label kind="assignment" x="144" y="374">delete_car(2,facing,y,x),
y++,
insert_car(2,facing,y,x),

action=0</label>
			<nail x="170" y="340"/>
			<nail x="323" y="340"/>
		</transition>
		<transition id="id12">
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="guard" x="204" y="-8">(y&gt;=1)&amp;&amp;(back_check_y(y,x))&amp;&amp;(action&gt;=car_time)</label>
			<label kind="assignment" x="153" y="8">delete_car(2,facing,y,x),
y--,
insert_car(2,facing,y,x),

action=0</label>
			<nail x="135" y="72"/>
			<nail x="331" y="72"/>
		</transition>
		<transition id="id13">
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="guard" x="-238" y="8">(x&lt;4)&amp;&amp;(fwd_check_x(y,x))&amp;&amp;(action&gt;=car_time)</label>
			<label kind="assignment" x="-238" y="34">delete_car(2,facing,y,x),
x++,
insert_car(2,facing,y,x),

action=0</label>
			<nail x="-144" y="93"/>
			<nail x="-144" y="204"/>
		</transition>
		<transition id="id14">
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="guard" x="-663" y="8">(x&gt;=1)&amp;&amp;(back_check_x(y,x))&amp;&amp;(action&gt;=car_time)</label>
			<label kind="assignment" x="-595" y="34">delete_car(2,facing,y,x),
x--,
insert_car(2,facing, y,x),

action=0</label>
			<nail x="-510" y="102"/>
			<nail x="-510" y="204"/>
		</transition>
		<transition id="id15">
			<source ref="id8"/>
			<target ref="id10"/>
			<label kind="guard" x="42" y="246">facing == 1</label>
		</transition>
		<transition id="id16">
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="guard" x="-221" y="229">facing == 0</label>
		</transition>
		<transition id="id17">
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="assignment" x="-255" y="425">insert_car(2, facing, y, x)</label>
		</transition>
	</template>
	<template>
		<name>truck</name>
		<parameter>const int[0,1] facing, int[0,5] y, int[0,5] x</parameter>
		<declaration>int truck_time = 1;</declaration>
		<location id="id18" x="8" y="221">
			<committed/>
		</location>
		<location id="id19" x="8" y="34">
			<committed/>
		</location>
		<location id="id20" x="-204" y="-68">
		</location>
		<location id="id21" x="289" y="-85">
		</location>
		<init ref="id18"/>
		<transition id="id22">
			<source ref="id19"/>
			<target ref="id21"/>
			<label kind="guard" x="93" y="8">facing == 1</label>
		</transition>
		<transition id="id23">
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="guard" x="-153" y="0">facing == 0</label>
		</transition>
		<transition id="id24">
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="assignment" x="-221" y="153">insert_truck(3, facing, y, x)</label>
		</transition>
		<transition id="id25">
			<source ref="id20"/>
			<target ref="id20"/>
			<label kind="guard" x="-145" y="-238">(x&lt;3)&amp;&amp;(fwd_check_x(y,x+1))&amp;&amp;(truckAction&gt;=truck_time)</label>
			<label kind="assignment" x="-145" y="-212">delete_truck(3,facing,y,x),
x++,
insert_truck(3,facing,y,x),

truckAction=0</label>
			<nail x="-18" y="-153"/>
			<nail x="-18" y="-51"/>
		</transition>
		<transition id="id26">
			<source ref="id20"/>
			<target ref="id20"/>
			<label kind="guard" x="-468" y="-255">(x&gt;=1)&amp;&amp;(back_check_x(y,x))&amp;&amp;(truckAction&gt;=truck_time)</label>
			<label kind="assignment" x="-467" y="-230">delete_truck(3,facing,y,x),
x--,
insert_truck(3,facing, y,x),

truckAction=0</label>
			<nail x="-399" y="-153"/>
			<nail x="-400" y="-68"/>
		</transition>
		<transition id="id27">
			<source ref="id21"/>
			<target ref="id21"/>
			<label kind="guard" x="203" y="59">(y&lt;3)&amp;&amp;(fwd_check_y(y+1,x))&amp;&amp;(truckAction&gt;=truck_time)</label>
			<label kind="assignment" x="203" y="85">delete_truck(3,facing,y,x),
y++,
insert_truck(3,facing,y,x),

truckAction=0</label>
			<nail x="229" y="51"/>
			<nail x="382" y="51"/>
		</transition>
		<transition id="id28">
			<source ref="id21"/>
			<target ref="id21"/>
			<label kind="guard" x="263" y="-297">(y&gt;=1)&amp;&amp;(back_check_y(y,x))&amp;&amp;(truckAction&gt;=truck_time)</label>
			<label kind="assignment" x="212" y="-281">delete_truck(3,facing,y,x),
y--,
insert_truck(3,facing,y,x),

truckAction=0</label>
			<nail x="194" y="-217"/>
			<nail x="390" y="-217"/>
		</transition>
	</template>
	<system>//car decl- facing, y,x
P_1 = red_car(0,2,1);

c0 = car(1,0,0);
c1 = car(0,0,1);
c2 = car(1,1,3);
c3 = car(0,1,4);
c4 = car(1,2,0);
c5 = car(1,3,2);
c6 = car(0,3,3);
c8 = car(0,4,0);
c9 = car(0,5,0);

t0 = truck(1,3,5);
t1 = truck(0,5,2);
// List one or more processes to be composed into a system.
system P_1, c0,c1,c2,c3,c4,c5,c6,c8,c9,t0,t1;
</system>
	<queries>
		<query>
			<formula>E&lt;&gt;P_1.win</formula>
			<comment/>
			<option key="--diagnostic" value="2"/>
			<result outcome="success" type="quality" timestamp="2024-05-14 16:48:34 +0200">
				<option key="--diagnostic" value="2"/>
			</result>
		</query>
	</queries>
</nta>
